@using MoviesMadeEasy.Models.ModelView
@model DashboardModelView
@using Newtonsoft.Json

@{
    ViewData["Title"] = "Dashboard";
    var itemsPerSlide = 5;
    var titles = Model.RecentlyViewedTitles ?? new List<Title>();
    var total = titles.Count;
    var showPriceToggle = Model.SubList != null
    && Model.ServicePrices != null
    && Model.SubList.Any(svc =>
       Model.ServicePrices.TryGetValue(svc.Id, out var c) && c > 0);
}

<link rel="stylesheet" href="~/css/dashboard.css" />

<h2 id="recently-viewed-title" class="dashtitles">Recently Viewed</h2>
@if (total > 0)
{
    <div id="results">
        <div id="recentlyViewedCarousel" class="carousel slide" data-bs-ride="carousel" aria-labelledby="recently-viewed-title">
            <div class="carousel-inner">
                @for (int i = 0; i < total; i += itemsPerSlide)
                {
                    var slide = titles.Skip(i).Take(itemsPerSlide).ToList();
                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <div class="row gx-3 gy-4 text-center">
                            @foreach (var t in slide)
                            {
                                <div class="col-6 col-sm-4 col-md-3 col-lg-2 movie-card" data-overview="@t.Overview" data-streaming="@(t.StreamingServices ?? "")">
                                    <button type="button" class="btn btn-primary" hidden>View Details</button>
                                    <h5 hidden>@t.TitleName</h5>
                                    <p class="movie-genres" hidden>Genres: @t.Genres</p>
                                    <p class="movie-rating" hidden>Rating: @t.Rating</p>
                                    <button type="button" class="btn-close remove-rvt" aria-label="Remove from recently viewed" data-title-id="@t.Id"></button>
                                    <a href="javascript:void(0)" aria-label="@t.TitleName, view details">
                                        <img src="@t.PosterUrl" alt="" class="img-fluid mb-2" />
                                        <span class="movie-title mb-0">@t.TitleName</span>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            <button class="carousel-control-prev" type="button" data-bs-target="#recentlyViewedCarousel" data-bs-slide="prev" aria-label="Previous slide">
                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            </button>
            <button class="carousel-control-next" type="button" data-bs-target="#recentlyViewedCarousel" data-bs-slide="next" aria-label="Next slide">
                <span class="carousel-control-next-icon" aria-hidden="true"></span>
            </button>
        </div>
    </div>
}
else
{
    <p id="no-recent-titles" role="status">You haven't viewed any titles yet.</p>
}

<h2 id="subscription-title" class="dashtitles">Current Subscriptions</h2>
@if (TempData["Message"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<button id="add-subscription-btn" class="btn btn-primary mb-3" aria-label="Manage streaming service"
        onclick="location.href='@Url.Action("SubscriptionForm","User", new { userId = Model.UserId })'">
    Manage Streaming Services
</button>

@if (showPriceToggle){
    <button id="toggle-analysis-btn" class="btn btn-secondary mb-3 d-block mx-auto" type="button">Streaming Service Analysis</button>
}

<div id="circle-center" class="container text-center">
    <div class="row justify-content-center">
        @if (Model.HasSubscriptions && Model.SubList != null && Model.SubList.Any())
        {
            <ul class="d-flex flex-wrap justify-content-center gap-3 list-unstyled" aria-label="Subscription services list">
                @foreach (var service in Model.SubList)
                {
                    <li class="subscription-item d-flex flex-column align-items-center justify-content-start" data-service-id="@service.Id">
                        @if (!string.IsNullOrEmpty(service.LogoUrl))
                        {
                            <a href="@service.BaseUrl" target="_blank" class="subscription-link" rel="noopener noreferrer" aria-label="Visit @service.Name website" role="link" tabindex="0">
                                <img src="@service.LogoUrl" alt="@service.Name logo" class="service-logo" />
                            </a>
                        }
                        <p class="subscription-price small mt-1 d-none">
                            @if (Model.ServicePrices != null
                           && Model.ServicePrices.TryGetValue(service.Id, out var cost)
                           && cost > 0)
                            {
                                @($"${cost:0.00}")
                            }
                        </p>
                    </li>
                }
            </ul>
        }
        else
        {
            <div id="subscription-bubble" class="subscription-placeholder text-center" role="region" aria-labelledby="subscription-title">
                <p>No subscriptions.</p>
            </div>
        }
    </div>
</div>

<div id="subscription-total" class="subscription-total text-center mb-3 d-none">
    Total Monthly Cost: @($"${Model.TotalMonthlyCost:0.00}")
</div>

<div id="analysis-section" class="d-none">
    <h2 class="dashtitles" id="usageTitle">Usage Summary</h2>

    @if (Model.UsageSummaries.Any())
    {
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Service</th>
                    <th>Last 30 Days</th>
                    <th>Lifetime</th>
                    <th>Cost per Click</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var u in Model.UsageSummaries)
                {
                    <tr>
                        <td>@u.ServiceName</td>
                        <td>@u.MonthlyClicks</td>
                        <td>@u.LifetimeClicks</td>
                        <td>
                            @(u.CostPerClick.HasValue
                                ? $"${u.CostPerClick.Value:0.00}"
                                : "-")
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <ul id="chart-legend" class="chart-legend"></ul>
        <div class="row">
            <div class="chart col-md-6">
                <canvas id="monthlyChart"></canvas>
            </div>
            <div class="chart col-md-6">
                <canvas id="lifetimeChart"></canvas>
            </div>
        </div>

        <div class="row mt-4">
            <div class="chart col-12">
                <canvas id="costPerClickChart"></canvas>
            </div>
        </div>
    }
    else
    {
        <p>No usage data to display.</p>
    }
</div>

@await Html.PartialAsync("_MovieModalPartial")

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/modal.js"></script>
<script src="~/js/dashboardModalHelper.js"></script>
<script src="~/js/dashboardPriceToggle.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>window.usageSummaryData = @Html.Raw(JsonConvert.SerializeObject(Model.UsageSummaries));</script>
<script src="~/js/usageSummaryCharts.js"></script>

<!-- PieChart code from: https://canvasjs.com/asp-net-mvc-charts/pie-chart/ -->
