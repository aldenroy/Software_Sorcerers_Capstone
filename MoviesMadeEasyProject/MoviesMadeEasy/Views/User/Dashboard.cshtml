@using MoviesMadeEasy.Models
@using MoviesMadeEasy.Models.ModelView
@model DashboardModelView

@{
    ViewData["Title"] = "Dashboard";
    var itemsPerSlide = 5;
    var titles = Model.RecentlyViewedTitles ?? new List<Title>();
    var total = titles.Count;
}

<link rel="stylesheet" href="~/css/dashboard.css" />

<h2 id="recently-viewed-title" class="dashtitles">Recently Viewed</h2>

@if (total > 0)
{
    <div id="results">
        <div id="recentlyViewedCarousel"
             class="carousel slide"
             data-bs-ride="carousel"
             aria-labelledby="recently-viewed-title">
            <div class="carousel-inner">
                @for (int i = 0; i < total; i += itemsPerSlide)
                {
                    var slide = titles.Skip(i).Take(itemsPerSlide).ToList();
                    <div class="carousel-item @(i == 0 ? "active" : "")">
                        <div class="row gx-3 gy-4 text-center">
                            @foreach (var t in slide)
                            {
                                <div class="col-6 col-sm-4 col-md-3 col-lg-2 movie-card"
                                     data-overview="@t.Overview"
                                     data-streaming="@(t.StreamingServices ?? "")">

                                    <button type="button"
                                            class="btn-close remove-rvt"
                                            aria-label="Remove from recently viewed"
                                            data-title-id="@t.Id"></button>

                                    <a href="javascript:void(0)"
                                       aria-label="@t.TitleName, view details">
                                        <img src="@t.PosterUrl"
                                             alt="@t.TitleName poster"
                                             class="img-fluid mb-2 btn-primary" />
                                        <h5 class="movie-title mb-0">
                                            @t.TitleName
                                        </h5>

                                        @* Hidden data for modal script *@
                                        <span class="movie-genres d-none">
                                            Genres: @(string.IsNullOrEmpty(t.Genres)
                                        ? "Unknown"
                                        : t.Genres)
                                        </span>
                                        <span class="movie-rating d-none">
                                            Rating: @(string.IsNullOrEmpty(t.Rating)
                                        ? "N/A"
                                        : t.Rating)
                                        </span>
                                    </a>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
            <button class="carousel-control-prev"
                    type="button"
                    data-bs-target="#recentlyViewedCarousel"
                    data-bs-slide="prev"
                    aria-label="Previous slide">
                <span class="carousel-control-prev-icon"
                      aria-hidden="true"></span>
            </button>
            <button class="carousel-control-next"
                    type="button"
                    data-bs-target="#recentlyViewedCarousel"
                    data-bs-slide="next"
                    aria-label="Next slide">
                <span class="carousel-control-next-icon"
                      aria-hidden="true"></span>
            </button>
        </div>
    </div>
}
else
{
    <p id="no-recent-titles" role="status">
        You haven't viewed any titles yet.
    </p>
}

@if (TempData["Message"] != null)
{
    <div class="alert alert-info alert-dismissible fade show" role="alert">
        @TempData["Message"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<button id="add-subscription-btn" class="btn btn-primary mb-3" aria-label="Manage streaming service"
        onclick="location.href='@Url.Action("SubscriptionForm", "User", new { userId = Model.UserId })'">
    Manage Streaming Services
</button>

<div id="circle-center" class="container text-center">
    <div class="row justify-content-center">
        @if (Model.HasSubscriptions && Model.SubList != null && Model.SubList.Any())
        {
            <ul class="d-flex flex-wrap justify-content-center gap-3 list-unstyled" aria-label="Subscription services list">
                @foreach (var service in Model.SubList)
                {
                    <li class="subscription-item d-flex align-items-center justify-content-center">
                        @if (!string.IsNullOrEmpty(service.LogoUrl))
                        {
                            <a href="@service.BaseUrl" target="_blank" class="subscription-link" rel="noopener noreferrer" aria-label="Visit @service.Name website">
                                <img src="@service.LogoUrl" alt="@service.Name logo" class="service-logo" />
                            </a>
                        }
                    </li>
                }
            </ul>
        }
        else
        {
            <div id="subscription-bubble" class="subscription-placeholder text-center" role="region" aria-labelledby="subscription-title">
                <p>No subscriptions.</p>
            </div>
        }
    </div>
</div>

@await Html.PartialAsync("_MovieModalPartial")

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="~/js/modal.js"></script>
<script src="~/js/dashboardModalHelper.js"></script>
