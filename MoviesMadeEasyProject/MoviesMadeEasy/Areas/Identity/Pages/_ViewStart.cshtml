@using MoviesMadeEasy.DAL.Abstract
@{
    Layout = "/Views/Shared/_Layout.cshtml";
    ViewData["ColorMode"] = "light"; // Default
    ViewData["FontSize"] = "medium";
    ViewData["FontType"] = "standard";

    if (User.Identity.IsAuthenticated)
    {
        var userManager = Context.RequestServices.GetService(typeof(UserManager<IdentityUser>)) as UserManager<IdentityUser>;
        var userRepository = Context.RequestServices.GetService(typeof(IUserRepository)) as IUserRepository;

        if (userManager != null && userRepository != null)
        {
            var identityUser = await userManager.GetUserAsync(User);
            if (identityUser != null)
            {
                var user = userRepository.GetUser(identityUser.Id);
                if (user != null)
                {
                    string colorMode = user.ColorMode?.ToLower().Trim() ?? "light";

                    // Map "High Contrast" to "high-contrast" for CSS class purposes
                    if (colorMode == "high contrast")
                    {
                        colorMode = "high-contrast";
                    }
                    // Ensure the value is "light", "dark", or "high contrast"
                    if (colorMode != "light" && colorMode != "dark" && colorMode != "high-contrast")
                    {
                        colorMode = "light"; // Default to light if invalid value
                    }
                    
                    ViewData["ColorMode"] = colorMode;

                    // Normalize FontSize
                    string fontSize = user.FontSize?.ToLower().Trim() ?? "medium";
                    if (fontSize == "extra large")
                    {
                        fontSize = "extra-large";
                    }

                    if (fontSize != "small" && fontSize != "medium" && fontSize != "large" && fontSize != "extra-large")
                    {
                        fontSize = "medium";
                    }
                    ViewData["FontSize"] = fontSize;

                    // Normalize FontType
                    string fontType = user.FontType?.ToLower().Trim() ?? "standard";
                    if (fontType == "open dyslexic")
                    {
                        fontType = "open-dyslexic";
                    }
                    
                    if (fontType != "standard" && fontType != "open-dyslexic")
                    {
                        fontType = "standard";
                    }
                    ViewData["FontType"] = fontType;
                }
            }
        }
    }
}
